"""
Django settings for config project.

Generated by 'django-admin_interface startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os
from django.utils.translation import gettext_lazy as _

# import pymysql

# pymysql.version_info= (1, 4, 6, 'final', 0)
# pymysql.install_as_MySQLdb()

env = environ.Env(
    DEBUG=(bool, False)
)
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["localhost", "127.0.0.1"])

SITE_ID = 2
# Application definition

INSTALLED_APPS = [
    # 'admin_interface',
    # 'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'jalali_date',
    'jalali_date_new',
    'drf_spectacular',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'dj_rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'rest_framework_simplejwt',
    # 'storages',
    'django_q',
    'tinymce',

    'cities',
    'options',
    'prices',
    'usermodel',
    'userprofile',
    'order',
    'address_note',
    'business',
    'payment',
    'factor',
    'dispatcher',
    'dispatcher_order',
    'dispatcher_profile',
    'dispatcher_payment',
    'dispatcher_vehicle',
    'cart',
    'apikey',
    'blog',
    'core',
    
]
X_FRAME_OPTIONS ='SAMEORIGIN'

SOCIALACCOUNT_PROVIDERS = {
    "google":{
            "SCOPE":[
                'profile',
                'email'
            ],
            "AUTH_PARAMS":{
                "access_type" : 'online'

            }

    }

}

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False
CORS_ORIGIN_WHITELIST = [
    'http://mohammadnasiroleslami.ir',
    'https://mohammadnasiroleslami.ir',
    'http://raypeyk.mohammadnasiroleslami.ir',
    'https://raypeyk.mohammadnasiroleslami.ir',
    'http://rayanpost.ir',
    'https://rayanpost.ir',
    'http://back.rayanpost.ir',
    'https://back.rayanpost.ir',
    'http://raypeyk.rayanpost.ir',
    'https://raypeyk.rayanpost.ir',
    'http://rayanpost.com',
    'https://rayanpost.com',
    'http://back.rayanpost.com',
    'https://back.rayanpost.com',
    'http://raypeyk.rayanpost.com',
    'https://raypeyk.rayanpost.com',
]
CSRF_TRUSTED_ORIGINS = [
    'https://back.mohammadnasiroleslami.ir',
    'https://mohammadnasiroleslami.ir',
    'https://raypeyk.mohammadnasiroleslami.ir',
    'https://rayanpost.ir',
    'https://back.rayanpost.ir',
    'https://rayanpost.ir',
    'https://raypeyk.rayanpost.ir',
    'https://rayanpost.com',
    'https://back.rayanpost.com',
    'https://rayanpost.com',
    'https://raypeyk.rayanpost.com',
]

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CORS_ALLOW_METHODS = [
    '*'
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.CurrentUserMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# # sqlite3
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

#mongodb
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'rayan',                # Replace with your MongoDB database name
#         'HOST': 'localhost',                # Replace with your MongoDB service name (if using Docker)
#         'PORT': 27017,                  # MongoDB default port
#         'USERNAME': 'mohaddese',            # Replace with your MongoDB username
#         'PASSWORD': 'Msp137700',  # Replace with your MongoDB password
#         # 'AUTH_SOURCE': 'admin',         # MongoDB authentication source (typically 'admin')
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'rayan',
#         'ENFORCE_SCHEMA': False,
#         'CLIENT': {
#             'host': 'mongodb://mohaddese:Msp137700@127.0.0.1:27017/rayan?authSource=rayan'
#         }
#     }
# }

#mysql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_ADMIN'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),  # Or the IP address of your MySQL server
        'PORT': env('DB_PORT'),        # MySQL default port
        'OPTIONS': {
            'charset': 'utf8mb4',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'usermodel.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGES = [
    ('en', _('English')),
    ('fa', _('Farsi')),
    # Add more languages as needed
]
LANGUAGE_CODE = 'fa'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# STATICFILES_DIRS = [
#     BASE_DIR / "static",
# ]
STATIC_ROOT = BASE_DIR / "static/"

MEDIA_ROOT = BASE_DIR / "media/"

MEDIA_URL = '/media/'
#media for cpannel
# STATIC_URL = '/static/'

# MEDIA_URL = '/media/'

# if DEBUG:

#     STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# else:

#     STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
        'dispatcher.authentication.CustomJWTAuthentication',
    ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'apikey.permissions.ApiKeyPermission',
    # ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DATETIME_FORMAT': "%Y/%m/%d %H:%M:%S",
    'DATE_FORMAT': "%Y/%m/%d",
    'DATE_INPUT_FORMATS': ['%Y/%m/%d'],

    # 'DEFAULT_THROTTLE_CLASSES': [
    #     'rest_framework.throttling.AnonRateThrottle',
    #     'rest_framework.throttling.UserRateThrottle'
    # ],
#     'DEFAULT_THROTTLE_RATES': {
#         'anon': '200/hour',
#         'user': '200/hour'
#     }
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'rayan',
    'DESCRIPTION': '',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

JALALI_DATE_DEFAULTS = {
   'Strftime': {
        'date': '%y/%m/%d',
        'datetime': '%H:%M:%S _ %y/%m/%d',
    },
    'Static': {
        'js': [
            # loading datepicker
            'admin_interface/js/django_jalali.min.js',
            # OR
            # 'admin_interface/jquery.ui.datepicker.jalali/scripts/jquery.ui.core.js',
            # 'admin_interface/jquery.ui.datepicker.jalali/scripts/calendar.js',
            # 'admin_interface/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc.js',
            # 'admin_interface/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc-fa.js',
            # 'admin_interface/js/main.js',
        ],
        'css': {
            'all': [
                'admin_interface/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css',
            ]
        }
    },
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'usermodel.backends.CustomAuthBackend',
    'dispatcher.backends.DispatcherBackend',
]

# ACCOUNT_EMAIL_VERIFICATION = 'none'
# SOCIALACCOUNT_QUERY_EMAIL = True
LOGIN_REDIRECT_URL = '/'  # Change this to the desired redirect URL after login
LOGOUT_REDIRECT_URL = '/'

import datetime
import jwt
from datetime import timedelta


JWT_ALGORITHM = 'HS256'
JWT_EXPIRATION_DELTA = datetime.timedelta(days=10)  # Set the expiration time (1 day in this example)


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=10),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=10),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(days=10),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=10),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}


#email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.rayanpost.ir'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
PASSWORD_RESET_TIMEOUT = 259200  # 3 days in seconds

#apikey kave
API_KEY = env('API_KEY')
zarinpal_access_token = env('zarinpal_access_token')
# DEFAULT_FILE_STORAGE = "storages.backends.s3.S3Storage"
# AWS_ACCESS_KEY_ID = '8d1d87a2-f20e-4c0d-937c-14274f21b2f1'
# AWS_SECRET_ACCESS_KEY = '679247ecf79d57e28f0e1ac3925aadc3d4432ac005a1bdcf763a7c3713c0e33f'
# AWS_S3_ENDPOINT_URL = "https://s3.ir-thr-at1.arvanstorage.com"
# AWS_STORAGE_BUCKET_NAME = 'rayan-post'
# AWS_SERVICE_NAME = 's3'
# AWS_S3_FILE_OVERWRITE = False
# AWS_LOCAL_STORAGE= f'{BASE_DIR}/AWS/'
# # # AWS_LOCAL_STORAGE= f'{BASE_DIR}/AWS/'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

Q_CLUSTER = {
    'name': 'DjangoQCluster',
    'workers': 4,
    'timeout': 60,
    'retry': 300,
    'orm': 'default',
}

TINYMCE_DEFAULT_CONFIG = {
    "height": 500,  # Editor height
    "plugins": "advlist anchor autolink charmap code fullscreen help image insertdatetime link lists media preview "
               "searchreplace table visualblocks wordcount",  # Enable all desired plugins
    "toolbar": "undo redo | styleselect | bold italic underline | "
               "alignleft aligncenter alignright alignjustify | "
               "bullist numlist outdent indent | link image media | "
               "table | charmap insertdatetime anchor | "
               "searchreplace code preview | fullscreen help",
    "menubar": "file edit view insert format tools table help",
    "extended_valid_elements": "script[src|type], iframe[src|width|height|frameborder|allowfullscreen], video[controls|preload|width|height|src|poster|autoplay|muted|loop]",
    "content_style": "body { font-family: Arial, sans-serif; font-size: 14px }",
}

